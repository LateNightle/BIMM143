---
title: "Class 14: DESeq2 Analysis Mini-Proj"
author: "Nathaniel Lightle (A16669288)"
format: pdf
---
## Finishing up Class 13
# OLD CODE
```{r}
count <- read.csv("airway_scaledcounts.csv", row.names = 1)
metadata <- read.csv("airway_metadata.csv")
head(count)
head(metadata)
nrow(count)
table(metadata$dex)
control.mean <- rowMeans(count[, metadata$dex == "control"])
treated.mean <- rowMeans(count[, metadata$dex == "treated"])
meancount <- data.frame(control.mean,treated.mean)
head(meancount)
plot(meancount)
library(ggplot2)
ggplot(meancount) +
  aes(control.mean, treated.mean) +
  geom_point(alpha=.2)
plot(meancount, log = "xy")
meancount$log2fc <- log2(meancount[,"treated.mean"]/meancount[,"control.mean"])
head(meancount)
to.rm.inds <- rowSums(meancount[,1:2] == 0) > 0
   #meancount[!to.rm.inds,]
mycount <- meancount[-to.rm.inds,]
head(mycount)
dim(mycount)
up.ind <- mycount$log2fc > 2
down.ind <- mycount$log2fc < (-2)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = count,
                         colData = metadata,
                         design = ~dex)
dds <- DESeq(dds)
res <- results(dds)
head(res)
plot(res$log2FoldChange, -log(res$padj))
   abline(v=2, col="red") #everything to the right up regulated
   abline(v=-2,col="red") #everything to the left down regulated
   abline(h=-log(.05), col="blue")
mycols <- rep("gray", nrow(res))
mycols[ abs(res$log2FoldChange) > 2 ]  <- "red"
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"
# Volcano plot with custom colors
plot( res$log2FoldChange,  -log(res$padj),
 col=mycols, ylab="-Log(P-value)", xlab="Log2(FoldChange)" )
# Cut-off lines
abline(v=c(-2,2), col="gray", lty=2)
abline(h=-log(0.1), col="gray", lty=2)
```

# NEW CODE
## Section 8: Adding Annotation Data

Installing packages I need
```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
```

Gettting a list of all available key types to map between
```{r}
res$symbol <- mapIds(org.Hs.eg.db,
                     keys=row.names(res), # Our genenames
                     keytype="ENSEMBL",        # The format of our genenames
                     column="SYMBOL",          # The new format we want to add
                     multiVals="first")
``` 

>Q11.

```{r}
res$entrez <- mapIds(org.Hs.eg.db,
                     keys=row.names(res),
                     column="ENTREZID",
                     keytype="ENSEMBL",
                     multiVals="first")
res$uniprot <- mapIds(org.Hs.eg.db,
                     keys=row.names(res),
                     column="UNIPROT",
                     keytype="ENSEMBL",
                     multiVals="first")
res$genename <- mapIds(org.Hs.eg.db,
                     keys=row.names(res),
                     column="GENENAME",
                     keytype="ENSEMBL",
                     multiVals="first")
head(res)
```

Ordering results by adjusted p-value
```{r}
ord <- order( res$padj )
#View(res[ord,])
head(res[ord,])
```

Writing results to new CSV
```{r}
write.csv(res[ord,], "deseq_results2.csv")
```

## 10: Pathway Analysis

```{r}
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)
head(kegg.sets.hs, 2)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
head(keggres$less, 3)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa05310")
```

>Q12.Can you do the same procedure as above to plot the pathview figures for the top 2 down-reguled pathways?

Yes, yes i can
```{r}
pathview(gene.dat=foldchanges, pathway.id="hsa05332")
pathview(gene.dat=foldchanges, pathway.id="hsa04940")
```

## OPTIONAL: Plotting counts for genes of interest

Finding GeneID for CRISPLD2
```{r}
i <- grep("CRISPLD2", res$symbol)
res[i,]
```
```{r}
rownames(res[i,])
```

Plotting the counts
```{r}
plotCounts(dds, gene="ENSG00000103196", intgroup="dex")
```

Getting the data instead
```{r}
d <- plotCounts(dds, gene="ENSG00000103196", intgroup="dex", returnData=TRUE)
head(d)
```

Making a boxplot
```{r}
boxplot(count ~ dex , data=d)
```

New and improved boxplot w/ ggplot2
```{r}
library(ggplot2)
ggplot(d, aes(dex, count, fill=dex)) + 
  geom_boxplot() + 
  scale_y_log10() + 
  ggtitle("CRISPLD2")
```






## Class 14:RNA-Seq Analysis Mini-Project

# Section 1: Differential Expression Analysis

```{r}
library(DESeq2)
```

Downloading data...
```{r}
metaFile <- "Data/GSE37704_metadata.csv"
countFile <- "Data/GSE37704_featurecounts.csv"
```

Takin' a peek, so to speak
```{r}
colData = read.csv(metaFile, row.names=1)
head(colData)
countData = read.csv(countFile, row.names=1)
head(countData)
```

>Q1. Align the columns

```{r}
countData <- as.matrix(countData[,-1])
head(countData)

```

>Q2. Exclude gene samples w/ no data

```{r}
countData = countData[-which(rowSums(countData) == 0), ]
head(countData)
```

```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
dds
```

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

>Q3. Use summary function on results

Summarizing results
```{r}
summary(res)
```

Making a volcano plot
```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

>Q4. Improve plot by adding color + axis labels

```{r}
mycols <- rep("gray", nrow(res) )

mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

inds <- (res$padj < .01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col= mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

>Q5. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype= "ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

>Q6. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file ="deseq_results.csv")
```


# Section 2: Pathway Analysis

```{r}
library(pathview)
```
```{r}
library(gage)
library(gageData)
data(kegg.sets.hs)
data(sigmet.idx.hs)
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Runnin' gage pathway analysis
```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```
```{r}
attributes(keggres)
```
```{r}
head(keggres$less)
```

Using `pathview()`
```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

Focusing on top 5 upregulated pathways
```{r}
keggrespathways <- rownames(keggres$greater)[1:5]
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

Making the mega `pathview()`
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

>Q7. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

Yes
```{r}
keggrespathways2 <- rownames(keggres$less)[1:5]
keggresids2 = substr(keggrespathways2, start=1, stop=8)
keggresids2
pathview(gene.data=foldchanges, pathway.id=keggresids2, species="hsa")
```

# Section 3: Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)
gobpsets = go.sets.hs[go.subs.hs$BP]
gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)
lapply(gobpres, head)
```

# Section 4: Reactome Analysis

Listing the significant genes at the 0.05 level as plain text file
```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

>Q8. What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

Mitotic cell cycle has the most significant "Entities p-value".
The most significant pathways listed don't match my previous KEGG results. I think the methodology of the KEGG system versus the Reactome system causes the difference in results. 


# Section 5: GO Online

>Q9. What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

The pathway with the most significant "Entities p-value" is "GO biological process complete". These results definitely don't match up to my KEGG results. I'm not exactly sure what cause the difference because I wasn't in class, so I don't completely understand whats happening. But, I'm going to take a stab in the dark and chalk it up to methodology differences between KEGG and Panther.




